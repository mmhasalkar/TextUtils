{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","title","aboutText","theme","changeTheme","className","to","type","id","href","role","onClick","TextForm","props","useState","text","setText","textAreaStyle","backgroundColor","color","border","heading","value","onChange","e","target","rows","style","disabled","length","toUpperCase","showAlert","toLowerCase","newText","split","filter","item","i","allItems","indexOf","join","navigator","clipboard","writeText","w","Alert","word","height","alert","charAt","slice","msg","About","App","setTheme","setAlert","message","setTimeout","document","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.14cdb189.chunk.js","sourcesContent":["// import PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\n\n\nexport default function Navbar({title, aboutText, theme, changeTheme}) {\n\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${theme} bg-${theme}`}>\n            <div className=\"container-fluid\">\n                <Link className=\"navbar-brand\" to=\"/\">{title}</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/about\">{aboutText}</Link>\n                        </li>\n                    </ul>\n                    <div className=\"d-flex\">\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                            <li className=\"nav-item dropdown\">\n                                <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                    Change Theme\n                                </a>\n                                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                    <li><span className=\"dropdown-item\" onClick={() => changeTheme('dark')}>Dark</span></li>\n                                    <li><span className=\"dropdown-item\" onClick={() => changeTheme('light')}>Light</span></li>\n                                    <li><span className=\"dropdown-item\" onClick={() => changeTheme('success')}>Green</span></li>\n                                    <li><span className=\"dropdown-item\" onClick={() => changeTheme('info')}>Blue</span></li>\n                                    <li><span className=\"dropdown-item\" onClick={() => changeTheme('warning')}>Orange</span></li>\n                                </ul>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\n// Navbar.prototype = {\n//     title: PropTypes.string.isRequired,\n//     aboutText: PropTypes.string\n// }\n\n// Navbar.defaultProps = {\n//     title: \"Type title here\",\n//     aboutText: \"About text here\"\n// }","import React, { useState } from 'react'\n\nexport default function TextForm(props) {\n    const [text, setText] = useState(\"\");\n\n    const onTextChange = (e) => {\n        setText(e.target.value);\n    }\n\n    const onUpperCaseClick = (e) => {\n        setText(text.toUpperCase());\n        props.showAlert('The text is converted to upper case!', 'success');\n    }\n    const onLowerCaseClick = (e) => {\n        setText(text.toLowerCase());\n        props.showAlert('The text is converted to lower case!', 'success');\n\n    }\n    const onRemoveExtraSpacesClick = (e) => {\n        setText(text.split(/[ ]+/).join(\" \"));\n        props.showAlert('Extra spaces removed from the text.', 'success');\n\n    }\n    const onRemoveDuplicatesClick = (e) => {\n        let newText = text.split(' ').filter(function(item,i,allItems){\n            return i === allItems.indexOf(item);\n        }).join(' ');\n        \n        setText(newText)\n        props.showAlert('The duplicate words are removed from the text.', 'success');\n    }\n    const onCopyClick = (e) => {\n        navigator.clipboard.writeText(text);\n        props.showAlert('Text copied!', 'success');\n    }\n    const onClearClick = (e) => {\n        setText('');\n        props.showAlert('The text is cleared!', 'success');\n    }\n    \n    let textAreaStyle = {}\n    if (props.theme === 'dark') {\n        textAreaStyle = {\n            backgroundColor: 'inherit',\n            color: 'white',\n            border: '1px solid white'\n        }\n    } else {\n        textAreaStyle = {\n            backgroundColor: 'inherit',\n            color: 'black',\n            border: '1px solid black'\n        }\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <h1>{props.heading}</h1>\n                <div className=\"mb-3\">\n                    <textarea className=\"form-control\" value={text} onChange={onTextChange} rows=\"14\" style={textAreaStyle}></textarea>\n                </div>\n                <button disabled={text.length === 0} className={`btn btn-${props.theme} mx-1 my-1`} onClick={onUpperCaseClick}>Convert To Uppper Case</button>\n                <button disabled={text.length === 0} className={`btn btn-${props.theme} mx-1 my-1`} onClick={onLowerCaseClick}>Convert To Lower Case</button>\n                <button disabled={text.length === 0} className={`btn btn-${props.theme} mx-1 my-1`} onClick={onRemoveDuplicatesClick}>Remove Duplicates</button>\n                <button disabled={text.length === 0} className={`btn btn-${props.theme} mx-1 my-1`} onClick={onRemoveExtraSpacesClick}>Remove Extra Spaces</button>\n                <button disabled={text.length === 0} className={`btn btn-${props.theme} mx-1 my-1`} onClick={onCopyClick}>Copy Text</button>\n                <button disabled={text.length === 0} className={`btn btn-${props.theme} mx-1 my-1`} onClick={onClearClick}>Clear</button>\n            </div>\n            <div className=\"container my-2\">\n                <h2>Your text summary</h2>\n                <p>{text.split(/\\s+/).filter(w => w).length} words and {text.length} characters</p>\n                <p>{0.008 * text.split(' ').filter(w => w).length} Minutes read</p>\n                <h2>Preview</h2>\n                <p>{text.length > 0 ? text : 'Nothing to preview!'}</p>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n\n    const capitalize = (word) => {\n        word = word.toLowerCase()\n        return word.charAt(0).toUpperCase() + word.slice(1)\n    }\n\n    return (\n        <div style={{height: '50px'}}>\n            {props.alert && <div className=\"alert alert-primary\" role=\"alert\">\n                <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\n            </div>}\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function About() {\n    return (\n        <div>\n            <h1 className=\"my-4\">About Us</h1>\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Eligendi blanditiis nisi voluptates iste consequuntur molestiae officia. Sapiente illo expedita minus veritatis explicabo sequi ullam magnam, fugit, quos esse animi quibusdam.</p>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n  } from \"react-router-dom\";\n\n\nfunction App() {\n    const [theme, setTheme] = useState('light');\n    const [alert, setAlert] = useState(null)\n\n    const showAlert = (message, type) => {\n        setAlert({\n            msg: message,\n            type: type\n        });\n\n        setTimeout(() => setAlert(null), 1500);\n    }\n\n    const handleChangetheme = (theme) => {\n        setTheme(theme);\n        document.body.className = `cstm-bg-${theme}`;\n        showAlert(`Theme changed to ${theme}`, 'success');\n    }\n\n    return (\n        <Router>\n            <Navbar title=\"TextUtils\" aboutText=\"About\" theme={theme} changeTheme={handleChangetheme}/>\n            <Alert alert={alert}/>\n            <div className={`container my-4 cstm-bg-${theme}`}>\n                <Switch>\n                    <Route path=\"/about\">\n                        <About />\n                    </Route>\n                    <Route path=\"/\">\n                        <TextForm heading=\"Enter text below to analyze\" theme={theme} showAlert={showAlert}/>\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}